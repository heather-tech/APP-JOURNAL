[{"/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/index.js":"1","/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/App.js":"2","/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/Home.js":"3","/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/IdeaForm.js":"4","/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/Idea.js":"5","/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/IdeaList.js":"6","/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/NavBar.js":"7"},{"size":339,"mtime":1689784096355,"results":"8","hashOfConfig":"9"},{"size":2313,"mtime":1689802242899,"results":"10","hashOfConfig":"9"},{"size":225,"mtime":1689774252257,"results":"11","hashOfConfig":"9"},{"size":793,"mtime":1689802973061,"results":"12","hashOfConfig":"9"},{"size":1206,"mtime":1689802318377,"results":"13","hashOfConfig":"9"},{"size":306,"mtime":1689784325796,"results":"14","hashOfConfig":"9"},{"size":338,"mtime":1689777307845,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4jy94b",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/index.js",[],[],"/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/App.js",["39","40"],[],"import React, { useState, useEffect } from 'react';\n// import { Routes, Route } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport IdeaForm from './IdeaForm';\nimport IdeaList from './IdeaList';\nimport NavBar from './NavBar';\n// import Home from './Home';\n// import ideasData from './db.json'\n\n// function App() {\n    \n//   return (\n//       <div>\n//           <NavBar />\n//           <Routes>              \n//             <Route exact path=\"/\">\n//                   <Home />\n//               </Route>\n//               <Route exact path=\"/ideas\">\n//                   <ProjectList />\n//               </Route>\n//               <Route path=\"/ideas/new\">\n//                   <New Idea />\n//               </Route>\n//               <Route path=\"/ideas/:id\">\n//                   <My Ideas />\n//               </Route>\n//           </Routes>\n//       </div>\n//   );\n// }\n\n\n\nconst App = () => {\n  const [ideas, setIdeas] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/ideas\")\n      .then(r => r.json())\n      .then(data => setIdeas(data))\n  }, []);\n\n\n\n  const saveIdeas = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/ideas', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ ideas }),\n      });\n      if (response.ok) {\n        console.log('Ideas saved successfully!');\n      } else {\n        console.error('Failed to save ideas:', response.status);\n      }\n    } catch (error) {\n      console.error('Error saving ideas:', error);\n    }\n  };\n\n  const addIdea = (idea) => {\n    const newIdea = { id: Date.now(), ...idea };\n    setIdeas([...ideas, newIdea]);\n  };\n\n  const deleteIdea = (id) => {\n    const updatedIdeas = ideas.filter((idea) => idea.id !== id);\n    setIdeas(updatedIdeas);\n  };\n\n  const editIdea = (id, updatedIdea) => {\n    const updatedIdeas = ideas.map((idea) =>\n      idea.id === id ? { ...idea, ...updatedIdea } : idea\n    );\n    setIdeas(updatedIdeas);\n  };\n\n  useEffect(() => {\n    saveIdeas();\n  }, [ideas]);\n\n  return (\n    <div>\n      <h1>APP JOURNAL</h1>\n      <NavBar />\n      <IdeaForm addIdea={addIdea} />\n      <IdeaList ideas={ideas} deleteIdea={deleteIdea} editIdea={editIdea} />\n    </div>\n  );\n};\n\nexport default App;\n",[],"/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/Home.js",[],[],"/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/IdeaForm.js",[],[],"/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/Idea.js",[],[],"/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/IdeaList.js",["41"],[],"/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/NavBar.js",[],[],{"ruleId":"42","severity":1,"message":"43","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":14},{"ruleId":"46","severity":1,"message":"47","line":84,"column":6,"nodeType":"48","endLine":84,"endColumn":13,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":7,"column":25,"nodeType":"52","messageId":"53","endLine":7,"endColumn":27},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveIdeas'. Either include it or remove the dependency array.","ArrayExpression",["54"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"55","fix":"56"},"Update the dependencies array to be: [ideas, saveIdeas]",{"range":"57","text":"58"},[2083,2090],"[ideas, saveIdeas]"]