{"ast":null,"code":"var _jsxFileName = \"/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/IdeaForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IdeaForm = ({\n  addIdea\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [func, setFunc] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('http://localhost:3001/ideas', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: title,\n        description: description\n      })\n    }).then(r => r.json()).then(ideaObject => {\n      console.log(ideaObject);\n      addIdea(ideaObject);\n      setTitle('');\n      setDescription('');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"App Name\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Brief Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Functionalities\",\n      value: func,\n      onChange: e => setFunc(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(IdeaForm, \"WrS9OzT9H8ZOxH5U7qHf9ai39Cw=\");\n_c = IdeaForm;\nexport default IdeaForm;\nvar _c;\n$RefreshReg$(_c, \"IdeaForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","IdeaForm","addIdea","_s","title","setTitle","description","setDescription","func","setFunc","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","ideaObject","console","log","catch","err","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/IdeaForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\n\nconst IdeaForm = ({ addIdea }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [func, setFunc] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch('http://localhost:3001/ideas', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json',},\n      body: JSON.stringify({ title:title, description:description }),\n    })\n    .then(r => r.json())\n    .then(ideaObject => {\n      console.log(ideaObject)\n          addIdea( ideaObject );\n\n    setTitle('');\n    setDescription('');\n    })\n\n        .catch(err => {\n          console.log(err)\n        })\n  };\n\n\n\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"App Name\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <textarea\n        placeholder=\"Brief Description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Functionalities\"\n        value={func}\n        onChange={(e) => setFunc(e.target.value)}\n      />\n      {/* <button type='submit' >Add Idea</button> */}\n    </form>\n  );\n};\n\nexport default IdeaForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,KAAK,CAAC,6BAA6B,EAAE;MACnCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAmB,CAAC;MAC9CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,KAAK,EAACA,KAAK;QAAEE,WAAW,EAACA;MAAY,CAAC;IAC/D,CAAC,CAAC,CACDa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACnBF,IAAI,CAACG,UAAU,IAAI;MAClBC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;MACnBpB,OAAO,CAAEoB,UAAW,CAAC;MAE3BjB,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,CAEGkB,KAAK,CAACC,GAAG,IAAI;MACZH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IAClB,CAAC,CAAC;EACR,CAAC;EAKD,oBACE1B,OAAA;IAAM2B,QAAQ,EAAEjB,YAAa;IAAAkB,QAAA,gBAC3B5B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE3B,KAAM;MACb4B,QAAQ,EAAGrB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACsB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFrC,OAAA;MACE8B,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAEzB,WAAY;MACnB0B,QAAQ,EAAGrB,CAAC,IAAKJ,cAAc,CAACI,CAAC,CAACsB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFrC,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAEvB,IAAK;MACZwB,QAAQ,EAAGrB,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACsB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEX,CAAC;AAAClC,EAAA,CAnDIF,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAqDd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}