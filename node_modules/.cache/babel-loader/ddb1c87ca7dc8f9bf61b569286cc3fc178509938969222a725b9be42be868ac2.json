{"ast":null,"code":"var _jsxFileName = \"/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import { Routes, Route } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport IdeaForm from './IdeaForm';\nimport IdeaList from './IdeaList';\nimport NavBar from './NavBar';\n// import Home from './Home';\n// import ideasData from './db.json'\n\n// function App() {\n\n//   return (\n//       <div>\n//           <NavBar />\n//           <Routes>              \n//             <Route exact path=\"/\">\n//                   <Home />\n//               </Route>\n//               <Route exact path=\"/ideas\">\n//                   <ProjectList />\n//               </Route>\n//               <Route path=\"/ideas/new\">\n//                   <New Idea />\n//               </Route>\n//               <Route path=\"/ideas/:id\">\n//                   <My Ideas />\n//               </Route>\n//           </Routes>\n//       </div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [ideas, setIdeas] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/ideas\").then(r => r.json()).then(data => setIdeas(data));\n  }, []);\n\n  // Moved to IdeaForm\n\n  // const saveIdeas = async () => {\n  //   try {\n  //     const response = await fetch('http://localhost:3001/ideas', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({ saveIdeas }),\n  //     });\n  //     if (response.ok) {\n  //       console.log('Ideas saved');\n  //     } else {\n  //       console.error('Failed to save:', response.status);\n  //     }\n  //   } catch (error) {\n  //     console.error('Error saving:', error);\n  //   }\n  // };\n\n  const addIdea = idea => {\n    setIdeas([...ideas, newIdea]);\n  };\n  const deleteIdea = id => {\n    const updatedIdeas = ideas.filter(idea => idea.id !== id);\n    setIdeas(updatedIdeas);\n  };\n  const editIdea = (id, updatedIdea) => {\n    const updatedIdeas = ideas.map(idea => idea.id === id ? {\n      ...idea,\n      ...updatedIdea\n    } : idea);\n    setIdeas(updatedIdeas);\n  };\n\n  // useEffect(() => {\n  //   saveIdeas();\n  // }, [ideas]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"APP JOURNAL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IdeaForm, {\n      addIdea: addIdea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IdeaList, {\n      ideas: ideas,\n      deleteIdea: deleteIdea,\n      editIdea: editIdea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CltX8ZNG8QFl66v/KYFUJdgxadU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Button","IdeaForm","IdeaList","NavBar","jsxDEV","_jsxDEV","App","_s","ideas","setIdeas","fetch","then","r","json","data","addIdea","idea","newIdea","deleteIdea","id","updatedIdeas","filter","editIdea","updatedIdea","map","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// import { Routes, Route } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport IdeaForm from './IdeaForm';\nimport IdeaList from './IdeaList';\nimport NavBar from './NavBar';\n// import Home from './Home';\n// import ideasData from './db.json'\n\n// function App() {\n    \n//   return (\n//       <div>\n//           <NavBar />\n//           <Routes>              \n//             <Route exact path=\"/\">\n//                   <Home />\n//               </Route>\n//               <Route exact path=\"/ideas\">\n//                   <ProjectList />\n//               </Route>\n//               <Route path=\"/ideas/new\">\n//                   <New Idea />\n//               </Route>\n//               <Route path=\"/ideas/:id\">\n//                   <My Ideas />\n//               </Route>\n//           </Routes>\n//       </div>\n//   );\n// }\n\n\n\nconst App = () => {\n  const [ideas, setIdeas] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/ideas\")\n      .then(r => r.json())\n      .then(data => setIdeas(data))\n  }, []);\n\n// Moved to IdeaForm\n\n  // const saveIdeas = async () => {\n  //   try {\n  //     const response = await fetch('http://localhost:3001/ideas', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({ saveIdeas }),\n  //     });\n  //     if (response.ok) {\n  //       console.log('Ideas saved');\n  //     } else {\n  //       console.error('Failed to save:', response.status);\n  //     }\n  //   } catch (error) {\n  //     console.error('Error saving:', error);\n  //   }\n  // };\n\n  const addIdea = (idea) => {\n    setIdeas([...ideas, newIdea]);\n  };\n\n  const deleteIdea = (id) => {\n    const updatedIdeas = ideas.filter((idea) => idea.id !== id);\n    setIdeas(updatedIdeas);\n  };\n\n  const editIdea = (id, updatedIdea) => {\n    const updatedIdeas = ideas.map((idea) =>\n      idea.id === id ? { ...idea, ...updatedIdea } : idea\n    );\n    setIdeas(updatedIdeas);\n  };\n\n\n  // useEffect(() => {\n  //   saveIdeas();\n  // }, [ideas]);\n\n  return (\n    <div>\n      <h1>APP JOURNAL</h1>\n      <NavBar />\n      <IdeaForm addIdea={addIdea} />\n      <IdeaList ideas={ideas} deleteIdea={deleteIdea} editIdea={editIdea} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACnBF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;;EAER;;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,OAAO,GAAIC,IAAI,IAAK;IACxBP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAES,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,UAAU,GAAIC,EAAE,IAAK;IACzB,MAAMC,YAAY,GAAGZ,KAAK,CAACa,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACG,EAAE,KAAKA,EAAE,CAAC;IAC3DV,QAAQ,CAACW,YAAY,CAAC;EACxB,CAAC;EAED,MAAME,QAAQ,GAAGA,CAACH,EAAE,EAAEI,WAAW,KAAK;IACpC,MAAMH,YAAY,GAAGZ,KAAK,CAACgB,GAAG,CAAER,IAAI,IAClCA,IAAI,CAACG,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGH,IAAI;MAAE,GAAGO;IAAY,CAAC,GAAGP,IACjD,CAAC;IACDP,QAAQ,CAACW,YAAY,CAAC;EACxB,CAAC;;EAGD;EACA;EACA;;EAEA,oBACEf,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBxB,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA,CAACJ,QAAQ;MAACc,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BxB,OAAA,CAACH,QAAQ;MAACM,KAAK,EAAEA,KAAM;MAACU,UAAU,EAAEA,UAAW;MAACI,QAAQ,EAAEA;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3DID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA6DT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}