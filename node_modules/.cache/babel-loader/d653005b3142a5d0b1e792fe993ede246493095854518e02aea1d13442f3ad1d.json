{"ast":null,"code":"var _jsxFileName = \"/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/MyContext.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyProvider = props => {\n  _s();\n  const [ideas, setIdeas] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/ideas\").then(res => res.json()).then(data => {\n      console.log(data);\n      setIdeas(data);\n    });\n  }, []);\n  const addIdea = idea => {\n    console.log(idea);\n    fetch(\"http://localhost:3001/ideas\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(idea)\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setIdeas([...ideas, data]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      ideas: ideas,\n      addIdea: addIdea\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n};\n_s(MyProvider, \"CltX8ZNG8QFl66v/KYFUJdgxadU=\");\n_c = MyProvider;\nvar _c;\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"names":["MyProvider","props","_s","ideas","setIdeas","useState","useEffect","fetch","then","res","json","data","console","log","addIdea","idea","method","headers","body","JSON","stringify","_jsxDEV","MyContext","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/heather/Development/code/phase-2/Project/APP-JOURNAL/src/MyContext.js"],"sourcesContent":["\n\nconst MyProvider = (props) => {\n    const [ideas, setIdeas] = useState([])\n\n    useEffect(() => {\n        fetch(\"http://localhost:3001/ideas\")\n        .then(res => res.json())\n        .then(data => {\n            console.log(data)\n            setIdeas(data)\n        })\n    }, [])\n\n    const addIdea = (idea) => {\n        console.log(idea)\n        fetch(\"http://localhost:3001/ideas\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(idea) \n        })\n        .then(res => res.json())\n        .then(data => {\n            console.log(data)\n            setIdeas ([...ideas, data])\n        })\n    }\n\n    return (<MyContext.Provider value={{\n            ideas: ideas, \n            addIdea: addIdea\n        }}>{props.children}\n        </MyContext.Provider>)\n    \n}\n"],"mappings":";;;AAEA,MAAMA,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZC,KAAK,CAAC,6BAA6B,CAAC,CACnCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBP,QAAQ,CAACO,IAAI,CAAC;IAClB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,OAAO,GAAIC,IAAI,IAAK;IACtBH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;IACjBR,KAAK,CAAC,6BAA6B,EAAE;MACjCS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC7B,CAAC,CAAC,CACDP,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBP,QAAQ,CAAE,CAAC,GAAGD,KAAK,EAAEQ,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC;EACN,CAAC;EAED,oBAAQU,OAAA,CAACC,SAAS,CAACC,QAAQ;IAACC,KAAK,EAAE;MAC3BrB,KAAK,EAAEA,KAAK;MACZW,OAAO,EAAEA;IACb,CAAE;IAAAW,QAAA,EAAExB,KAAK,CAACwB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAE7B,CAAC;AAAA3B,EAAA,CAlCKF,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}